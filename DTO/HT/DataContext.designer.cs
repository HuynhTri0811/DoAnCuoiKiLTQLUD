#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO.HT
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyTracNghiemHocSinh-LTQLUD")]
	public partial class DataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCauHoi(CauHoi instance);
    partial void UpdateCauHoi(CauHoi instance);
    partial void DeleteCauHoi(CauHoi instance);
    partial void InsertCauHoiTrongDeNao(CauHoiTrongDeNao instance);
    partial void UpdateCauHoiTrongDeNao(CauHoiTrongDeNao instance);
    partial void DeleteCauHoiTrongDeNao(CauHoiTrongDeNao instance);
    partial void InsertDe(De instance);
    partial void UpdateDe(De instance);
    partial void DeleteDe(De instance);
    partial void InsertDeVaKhoiTrongKyThi(DeVaKhoiTrongKyThi instance);
    partial void UpdateDeVaKhoiTrongKyThi(DeVaKhoiTrongKyThi instance);
    partial void DeleteDeVaKhoiTrongKyThi(DeVaKhoiTrongKyThi instance);
    partial void InsertDoKho(DoKho instance);
    partial void UpdateDoKho(DoKho instance);
    partial void DeleteDoKho(DoKho instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertHocSinh(HocSinh instance);
    partial void UpdateHocSinh(HocSinh instance);
    partial void DeleteHocSinh(HocSinh instance);
    partial void InsertHocSinhTrongKiThi(HocSinhTrongKiThi instance);
    partial void UpdateHocSinhTrongKiThi(HocSinhTrongKiThi instance);
    partial void DeleteHocSinhTrongKiThi(HocSinhTrongKiThi instance);
    partial void InsertKhoi(Khoi instance);
    partial void UpdateKhoi(Khoi instance);
    partial void DeleteKhoi(Khoi instance);
    partial void InsertKyThi(KyThi instance);
    partial void UpdateKyThi(KyThi instance);
    partial void DeleteKyThi(KyThi instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertDeOnTap(DeOnTap instance);
    partial void UpdateDeOnTap(DeOnTap instance);
    partial void DeleteDeOnTap(DeOnTap instance);
    #endregion
		
		public DataContextDataContext() : 
				base(global::DTO.Properties.Settings.Default.QuanLyTracNghiemHocSinh_LTQLUDConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CauHoi> CauHois
		{
			get
			{
				return this.GetTable<CauHoi>();
			}
		}
		
		public System.Data.Linq.Table<CauHoiTrongDeNao> CauHoiTrongDeNaos
		{
			get
			{
				return this.GetTable<CauHoiTrongDeNao>();
			}
		}
		
		public System.Data.Linq.Table<De> Des
		{
			get
			{
				return this.GetTable<De>();
			}
		}
		
		public System.Data.Linq.Table<DeVaKhoiTrongKyThi> DeVaKhoiTrongKyThis
		{
			get
			{
				return this.GetTable<DeVaKhoiTrongKyThi>();
			}
		}
		
		public System.Data.Linq.Table<DoKho> DoKhos
		{
			get
			{
				return this.GetTable<DoKho>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh> HocSinhs
		{
			get
			{
				return this.GetTable<HocSinh>();
			}
		}
		
		public System.Data.Linq.Table<HocSinhTrongKiThi> HocSinhTrongKiThis
		{
			get
			{
				return this.GetTable<HocSinhTrongKiThi>();
			}
		}
		
		public System.Data.Linq.Table<Khoi> Khois
		{
			get
			{
				return this.GetTable<Khoi>();
			}
		}
		
		public System.Data.Linq.Table<KyThi> KyThis
		{
			get
			{
				return this.GetTable<KyThi>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<DeOnTap> DeOnTaps
		{
			get
			{
				return this.GetTable<DeOnTap>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoi")]
	public partial class CauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCauHoi;
		
		private string _NoiDung;
		
		private string _CauA;
		
		private string _CauB;
		
		private string _CauC;
		
		private string _CauD;
		
		private string _CauDung;
		
		private System.Nullable<int> _MaKhoi;
		
		private System.Nullable<bool> _HocSinhDongGop;
		
		private System.Nullable<int> _DoKho;
		
		private EntitySet<CauHoiTrongDeNao> _CauHoiTrongDeNaos;
		
		private EntityRef<DoKho> _DoKho1;
		
		private EntityRef<Khoi> _Khoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(int value);
    partial void OnMaCauHoiChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnCauAChanging(string value);
    partial void OnCauAChanged();
    partial void OnCauBChanging(string value);
    partial void OnCauBChanged();
    partial void OnCauCChanging(string value);
    partial void OnCauCChanged();
    partial void OnCauDChanging(string value);
    partial void OnCauDChanged();
    partial void OnCauDungChanging(string value);
    partial void OnCauDungChanged();
    partial void OnMaKhoiChanging(System.Nullable<int> value);
    partial void OnMaKhoiChanged();
    partial void OnHocSinhDongGopChanging(System.Nullable<bool> value);
    partial void OnHocSinhDongGopChanged();
    partial void OnDoKhoChanging(System.Nullable<int> value);
    partial void OnDoKhoChanged();
    #endregion
		
		public CauHoi()
		{
			this._CauHoiTrongDeNaos = new EntitySet<CauHoiTrongDeNao>(new Action<CauHoiTrongDeNao>(this.attach_CauHoiTrongDeNaos), new Action<CauHoiTrongDeNao>(this.detach_CauHoiTrongDeNaos));
			this._DoKho1 = default(EntityRef<DoKho>);
			this._Khoi = default(EntityRef<Khoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(200)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauA", DbType="NVarChar(50)")]
		public string CauA
		{
			get
			{
				return this._CauA;
			}
			set
			{
				if ((this._CauA != value))
				{
					this.OnCauAChanging(value);
					this.SendPropertyChanging();
					this._CauA = value;
					this.SendPropertyChanged("CauA");
					this.OnCauAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauB", DbType="NVarChar(50)")]
		public string CauB
		{
			get
			{
				return this._CauB;
			}
			set
			{
				if ((this._CauB != value))
				{
					this.OnCauBChanging(value);
					this.SendPropertyChanging();
					this._CauB = value;
					this.SendPropertyChanged("CauB");
					this.OnCauBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauC", DbType="NVarChar(50)")]
		public string CauC
		{
			get
			{
				return this._CauC;
			}
			set
			{
				if ((this._CauC != value))
				{
					this.OnCauCChanging(value);
					this.SendPropertyChanging();
					this._CauC = value;
					this.SendPropertyChanged("CauC");
					this.OnCauCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauD", DbType="NVarChar(50)")]
		public string CauD
		{
			get
			{
				return this._CauD;
			}
			set
			{
				if ((this._CauD != value))
				{
					this.OnCauDChanging(value);
					this.SendPropertyChanging();
					this._CauD = value;
					this.SendPropertyChanged("CauD");
					this.OnCauDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauDung", DbType="NChar(5)")]
		public string CauDung
		{
			get
			{
				return this._CauDung;
			}
			set
			{
				if ((this._CauDung != value))
				{
					this.OnCauDungChanging(value);
					this.SendPropertyChanging();
					this._CauDung = value;
					this.SendPropertyChanged("CauDung");
					this.OnCauDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int")]
		public System.Nullable<int> MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._Khoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocSinhDongGop", DbType="Bit")]
		public System.Nullable<bool> HocSinhDongGop
		{
			get
			{
				return this._HocSinhDongGop;
			}
			set
			{
				if ((this._HocSinhDongGop != value))
				{
					this.OnHocSinhDongGopChanging(value);
					this.SendPropertyChanging();
					this._HocSinhDongGop = value;
					this.SendPropertyChanged("HocSinhDongGop");
					this.OnHocSinhDongGopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoKho", DbType="Int")]
		public System.Nullable<int> DoKho
		{
			get
			{
				return this._DoKho;
			}
			set
			{
				if ((this._DoKho != value))
				{
					if (this._DoKho1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDoKhoChanging(value);
					this.SendPropertyChanging();
					this._DoKho = value;
					this.SendPropertyChanged("DoKho");
					this.OnDoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_CauHoiTrongDeNao", Storage="_CauHoiTrongDeNaos", ThisKey="MaCauHoi", OtherKey="MaCauHoi")]
		public EntitySet<CauHoiTrongDeNao> CauHoiTrongDeNaos
		{
			get
			{
				return this._CauHoiTrongDeNaos;
			}
			set
			{
				this._CauHoiTrongDeNaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoKho_CauHoi", Storage="_DoKho1", ThisKey="DoKho", OtherKey="maDoKho", IsForeignKey=true)]
		public DoKho DoKho1
		{
			get
			{
				return this._DoKho1.Entity;
			}
			set
			{
				DoKho previousValue = this._DoKho1.Entity;
				if (((previousValue != value) 
							|| (this._DoKho1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoKho1.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._DoKho1.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._DoKho = value.maDoKho;
					}
					else
					{
						this._DoKho = default(Nullable<int>);
					}
					this.SendPropertyChanged("DoKho1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_CauHoi", Storage="_Khoi", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public Khoi Khoi
		{
			get
			{
				return this._Khoi.Entity;
			}
			set
			{
				Khoi previousValue = this._Khoi.Entity;
				if (((previousValue != value) 
							|| (this._Khoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoi.Entity = null;
						previousValue.CauHois.Remove(this);
					}
					this._Khoi.Entity = value;
					if ((value != null))
					{
						value.CauHois.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("Khoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHoiTrongDeNaos(CauHoiTrongDeNao entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = this;
		}
		
		private void detach_CauHoiTrongDeNaos(CauHoiTrongDeNao entity)
		{
			this.SendPropertyChanging();
			entity.CauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CauHoiTrongDeNao")]
	public partial class CauHoiTrongDeNao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCauHoi;
		
		private string _MaDe;
		
		private int _MaKhoi;
		
		private EntityRef<CauHoi> _CauHoi;
		
		private EntityRef<De> _De;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(int value);
    partial void OnMaCauHoiChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnMaKhoiChanging(int value);
    partial void OnMaKhoiChanged();
    #endregion
		
		public CauHoiTrongDeNao()
		{
			this._CauHoi = default(EntityRef<CauHoi>);
			this._De = default(EntityRef<De>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					if (this._CauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._De.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._De.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CauHoi_CauHoiTrongDeNao", Storage="_CauHoi", ThisKey="MaCauHoi", OtherKey="MaCauHoi", IsForeignKey=true)]
		public CauHoi CauHoi
		{
			get
			{
				return this._CauHoi.Entity;
			}
			set
			{
				CauHoi previousValue = this._CauHoi.Entity;
				if (((previousValue != value) 
							|| (this._CauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CauHoi.Entity = null;
						previousValue.CauHoiTrongDeNaos.Remove(this);
					}
					this._CauHoi.Entity = value;
					if ((value != null))
					{
						value.CauHoiTrongDeNaos.Add(this);
						this._MaCauHoi = value.MaCauHoi;
					}
					else
					{
						this._MaCauHoi = default(int);
					}
					this.SendPropertyChanged("CauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="De_CauHoiTrongDeNao", Storage="_De", ThisKey="MaDe,MaKhoi", OtherKey="MaDe,MaKhoi", IsForeignKey=true)]
		public De De
		{
			get
			{
				return this._De.Entity;
			}
			set
			{
				De previousValue = this._De.Entity;
				if (((previousValue != value) 
							|| (this._De.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._De.Entity = null;
						previousValue.CauHoiTrongDeNaos.Remove(this);
					}
					this._De.Entity = value;
					if ((value != null))
					{
						value.CauHoiTrongDeNaos.Add(this);
						this._MaDe = value.MaDe;
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaDe = default(string);
						this._MaKhoi = default(int);
					}
					this.SendPropertyChanged("De");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.De")]
	public partial class De : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDe;
		
		private string _TenDe;
		
		private int _MaKhoi;
		
		private string _DoKho;
		
		private EntitySet<CauHoiTrongDeNao> _CauHoiTrongDeNaos;
		
		private EntitySet<DeVaKhoiTrongKyThi> _DeVaKhoiTrongKyThis;
		
		private EntitySet<DeOnTap> _DeOnTaps;
		
		private EntityRef<Khoi> _Khoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnTenDeChanging(string value);
    partial void OnTenDeChanged();
    partial void OnMaKhoiChanging(int value);
    partial void OnMaKhoiChanged();
    partial void OnDoKhoChanging(string value);
    partial void OnDoKhoChanged();
    #endregion
		
		public De()
		{
			this._CauHoiTrongDeNaos = new EntitySet<CauHoiTrongDeNao>(new Action<CauHoiTrongDeNao>(this.attach_CauHoiTrongDeNaos), new Action<CauHoiTrongDeNao>(this.detach_CauHoiTrongDeNaos));
			this._DeVaKhoiTrongKyThis = new EntitySet<DeVaKhoiTrongKyThi>(new Action<DeVaKhoiTrongKyThi>(this.attach_DeVaKhoiTrongKyThis), new Action<DeVaKhoiTrongKyThi>(this.detach_DeVaKhoiTrongKyThis));
			this._DeOnTaps = new EntitySet<DeOnTap>(new Action<DeOnTap>(this.attach_DeOnTaps), new Action<DeOnTap>(this.detach_DeOnTaps));
			this._Khoi = default(EntityRef<Khoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDe", DbType="NVarChar(50)")]
		public string TenDe
		{
			get
			{
				return this._TenDe;
			}
			set
			{
				if ((this._TenDe != value))
				{
					this.OnTenDeChanging(value);
					this.SendPropertyChanging();
					this._TenDe = value;
					this.SendPropertyChanged("TenDe");
					this.OnTenDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._Khoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoKho", DbType="NVarChar(20)")]
		public string DoKho
		{
			get
			{
				return this._DoKho;
			}
			set
			{
				if ((this._DoKho != value))
				{
					this.OnDoKhoChanging(value);
					this.SendPropertyChanging();
					this._DoKho = value;
					this.SendPropertyChanged("DoKho");
					this.OnDoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="De_CauHoiTrongDeNao", Storage="_CauHoiTrongDeNaos", ThisKey="MaDe,MaKhoi", OtherKey="MaDe,MaKhoi")]
		public EntitySet<CauHoiTrongDeNao> CauHoiTrongDeNaos
		{
			get
			{
				return this._CauHoiTrongDeNaos;
			}
			set
			{
				this._CauHoiTrongDeNaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="De_DeVaKhoiTrongKyThi", Storage="_DeVaKhoiTrongKyThis", ThisKey="MaDe,MaKhoi", OtherKey="MaDe,MaKhoi")]
		public EntitySet<DeVaKhoiTrongKyThi> DeVaKhoiTrongKyThis
		{
			get
			{
				return this._DeVaKhoiTrongKyThis;
			}
			set
			{
				this._DeVaKhoiTrongKyThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="De_DeOnTap", Storage="_DeOnTaps", ThisKey="MaDe,MaKhoi", OtherKey="MaDe,MaKhoi")]
		public EntitySet<DeOnTap> DeOnTaps
		{
			get
			{
				return this._DeOnTaps;
			}
			set
			{
				this._DeOnTaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_De", Storage="_Khoi", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public Khoi Khoi
		{
			get
			{
				return this._Khoi.Entity;
			}
			set
			{
				Khoi previousValue = this._Khoi.Entity;
				if (((previousValue != value) 
							|| (this._Khoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoi.Entity = null;
						previousValue.Des.Remove(this);
					}
					this._Khoi.Entity = value;
					if ((value != null))
					{
						value.Des.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(int);
					}
					this.SendPropertyChanged("Khoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHoiTrongDeNaos(CauHoiTrongDeNao entity)
		{
			this.SendPropertyChanging();
			entity.De = this;
		}
		
		private void detach_CauHoiTrongDeNaos(CauHoiTrongDeNao entity)
		{
			this.SendPropertyChanging();
			entity.De = null;
		}
		
		private void attach_DeVaKhoiTrongKyThis(DeVaKhoiTrongKyThi entity)
		{
			this.SendPropertyChanging();
			entity.De = this;
		}
		
		private void detach_DeVaKhoiTrongKyThis(DeVaKhoiTrongKyThi entity)
		{
			this.SendPropertyChanging();
			entity.De = null;
		}
		
		private void attach_DeOnTaps(DeOnTap entity)
		{
			this.SendPropertyChanging();
			entity.De = this;
		}
		
		private void detach_DeOnTaps(DeOnTap entity)
		{
			this.SendPropertyChanging();
			entity.De = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeVaKhoiTrongKyThi")]
	public partial class DeVaKhoiTrongKyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDeVaKhoiTrongKyThi;
		
		private string _MaDe;
		
		private int _MaKhoi;
		
		private string _MaKyThi;
		
		private EntitySet<HocSinhTrongKiThi> _HocSinhTrongKiThis;
		
		private EntityRef<De> _De;
		
		private EntityRef<KyThi> _KyThi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeVaKhoiTrongKyThiChanging(string value);
    partial void OnMaDeVaKhoiTrongKyThiChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnMaKhoiChanging(System.Nullable<int> value);
    partial void OnMaKhoiChanged();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    #endregion
		
		public DeVaKhoiTrongKyThi()
		{
			this._HocSinhTrongKiThis = new EntitySet<HocSinhTrongKiThi>(new Action<HocSinhTrongKiThi>(this.attach_HocSinhTrongKiThis), new Action<HocSinhTrongKiThi>(this.detach_HocSinhTrongKiThis));
			this._De = default(EntityRef<De>);
			this._KyThi = default(EntityRef<KyThi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeVaKhoiTrongKyThi", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeVaKhoiTrongKyThi
		{
			get
			{
				return this._MaDeVaKhoiTrongKyThi;
			}
			set
			{
				if ((this._MaDeVaKhoiTrongKyThi != value))
				{
					this.OnMaDeVaKhoiTrongKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeVaKhoiTrongKyThi = value;
					this.SendPropertyChanged("MaDeVaKhoiTrongKyThi");
					this.OnMaDeVaKhoiTrongKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="NChar(10)")]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._De.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int")]
		public int MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._De.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(10)")]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					if (this._KyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeVaKhoiTrongKyThi_HocSinhTrongKiThi", Storage="_HocSinhTrongKiThis", ThisKey="MaDeVaKhoiTrongKyThi", OtherKey="MaDeVaKhoiTrongKiThi")]
		public EntitySet<HocSinhTrongKiThi> HocSinhTrongKiThis
		{
			get
			{
				return this._HocSinhTrongKiThis;
			}
			set
			{
				this._HocSinhTrongKiThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="De_DeVaKhoiTrongKyThi", Storage="_De", ThisKey="MaDe,MaKhoi", OtherKey="MaDe,MaKhoi", IsForeignKey=true)]
		public De De
		{
			get
			{
				return this._De.Entity;
			}
			set
			{
				De previousValue = this._De.Entity;
				if (((previousValue != value) 
							|| (this._De.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._De.Entity = null;
						previousValue.DeVaKhoiTrongKyThis.Remove(this);
					}
					this._De.Entity = value;
					if ((value != null))
					{
						value.DeVaKhoiTrongKyThis.Add(this);
						this._MaDe = value.MaDe;
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaDe = default(string);
						this._MaKhoi = default(int);
					}
					this.SendPropertyChanged("De");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_DeVaKhoiTrongKyThi", Storage="_KyThi", ThisKey="MaKyThi", OtherKey="MaKyThi", IsForeignKey=true)]
		public KyThi KyThi
		{
			get
			{
				return this._KyThi.Entity;
			}
			set
			{
				KyThi previousValue = this._KyThi.Entity;
				if (((previousValue != value) 
							|| (this._KyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KyThi.Entity = null;
						previousValue.DeVaKhoiTrongKyThis.Remove(this);
					}
					this._KyThi.Entity = value;
					if ((value != null))
					{
						value.DeVaKhoiTrongKyThis.Add(this);
						this._MaKyThi = value.MaKyThi;
					}
					else
					{
						this._MaKyThi = default(string);
					}
					this.SendPropertyChanged("KyThi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinhTrongKiThis(HocSinhTrongKiThi entity)
		{
			this.SendPropertyChanging();
			entity.DeVaKhoiTrongKyThi = this;
		}
		
		private void detach_HocSinhTrongKiThis(HocSinhTrongKiThi entity)
		{
			this.SendPropertyChanging();
			entity.DeVaKhoiTrongKyThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoKho")]
	public partial class DoKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDoKho;
		
		private string _TenDoKho;
		
		private EntitySet<CauHoi> _CauHois;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDoKhoChanging(int value);
    partial void OnmaDoKhoChanged();
    partial void OnTenDoKhoChanging(string value);
    partial void OnTenDoKhoChanged();
    #endregion
		
		public DoKho()
		{
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDoKho", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maDoKho
		{
			get
			{
				return this._maDoKho;
			}
			set
			{
				if ((this._maDoKho != value))
				{
					this.OnmaDoKhoChanging(value);
					this.SendPropertyChanging();
					this._maDoKho = value;
					this.SendPropertyChanged("maDoKho");
					this.OnmaDoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDoKho", DbType="NVarChar(50)")]
		public string TenDoKho
		{
			get
			{
				return this._TenDoKho;
			}
			set
			{
				if ((this._TenDoKho != value))
				{
					this.OnTenDoKhoChanging(value);
					this.SendPropertyChanging();
					this._TenDoKho = value;
					this.SendPropertyChanged("TenDoKho");
					this.OnTenDoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DoKho_CauHoi", Storage="_CauHois", ThisKey="maDoKho", OtherKey="DoKho")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.DoKho1 = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.DoKho1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiaVien;
		
		private string _Password;
		
		private string _HoTen;
		
		private string _DiaChi;
		
		private string _Email;
		
		private string _SDT;
		
		private System.Nullable<int> _MaKhoi;
		
		private EntityRef<Khoi> _Khoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaVienChanging(string value);
    partial void OnMaGiaVienChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMaKhoiChanging(System.Nullable<int> value);
    partial void OnMaKhoiChanged();
    #endregion
		
		public GiaoVien()
		{
			this._Khoi = default(EntityRef<Khoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaVien", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiaVien
		{
			get
			{
				return this._MaGiaVien;
			}
			set
			{
				if ((this._MaGiaVien != value))
				{
					this.OnMaGiaVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaVien = value;
					this.SendPropertyChanged("MaGiaVien");
					this.OnMaGiaVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int")]
		public System.Nullable<int> MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._Khoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_GiaoVien", Storage="_Khoi", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public Khoi Khoi
		{
			get
			{
				return this._Khoi.Entity;
			}
			set
			{
				Khoi previousValue = this._Khoi.Entity;
				if (((previousValue != value) 
							|| (this._Khoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoi.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._Khoi.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("Khoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh")]
	public partial class HocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _Password;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _MaLop;
		
		private string _SoilPass;
		
		private EntitySet<HocSinhTrongKiThi> _HocSinhTrongKiThis;
		
		private EntitySet<DeOnTap> _DeOnTaps;
		
		private EntityRef<Lop> _Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnSoilPassChanging(string value);
    partial void OnSoilPassChanged();
    #endregion
		
		public HocSinh()
		{
			this._HocSinhTrongKiThis = new EntitySet<HocSinhTrongKiThi>(new Action<HocSinhTrongKiThi>(this.attach_HocSinhTrongKiThis), new Action<HocSinhTrongKiThi>(this.detach_HocSinhTrongKiThis));
			this._DeOnTaps = new EntitySet<DeOnTap>(new Action<DeOnTap>(this.attach_DeOnTaps), new Action<DeOnTap>(this.detach_DeOnTaps));
			this._Lop = default(EntityRef<Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(1000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NChar(10)")]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoilPass", DbType="VarChar(5)")]
		public string SoilPass
		{
			get
			{
				return this._SoilPass;
			}
			set
			{
				if ((this._SoilPass != value))
				{
					this.OnSoilPassChanging(value);
					this.SendPropertyChanging();
					this._SoilPass = value;
					this.SendPropertyChanged("SoilPass");
					this.OnSoilPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhTrongKiThi", Storage="_HocSinhTrongKiThis", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<HocSinhTrongKiThi> HocSinhTrongKiThis
		{
			get
			{
				return this._HocSinhTrongKiThis;
			}
			set
			{
				this._HocSinhTrongKiThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DeOnTap", Storage="_DeOnTaps", ThisKey="MaHocSinh", OtherKey="MaHocSinh")]
		public EntitySet<DeOnTap> DeOnTaps
		{
			get
			{
				return this._DeOnTaps;
			}
			set
			{
				this._DeOnTaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_HocSinh", Storage="_Lop", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.HocSinhs.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.HocSinhs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(string);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinhTrongKiThis(HocSinhTrongKiThi entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_HocSinhTrongKiThis(HocSinhTrongKiThi entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
		
		private void attach_DeOnTaps(DeOnTap entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_DeOnTaps(DeOnTap entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinhTrongKiThi")]
	public partial class HocSinhTrongKiThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocSinh;
		
		private string _MaDeVaKhoiTrongKiThi;
		
		private System.Nullable<double> _Diem;
		
		private EntityRef<DeVaKhoiTrongKyThi> _DeVaKhoiTrongKyThi;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaDeVaKhoiTrongKiThiChanging(string value);
    partial void OnMaDeVaKhoiTrongKiThiChanged();
    partial void OnDiemChanging(System.Nullable<double> value);
    partial void OnDiemChanged();
    #endregion
		
		public HocSinhTrongKiThi()
		{
			this._DeVaKhoiTrongKyThi = default(EntityRef<DeVaKhoiTrongKyThi>);
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeVaKhoiTrongKiThi", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeVaKhoiTrongKiThi
		{
			get
			{
				return this._MaDeVaKhoiTrongKiThi;
			}
			set
			{
				if ((this._MaDeVaKhoiTrongKiThi != value))
				{
					if (this._DeVaKhoiTrongKyThi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeVaKhoiTrongKiThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeVaKhoiTrongKiThi = value;
					this.SendPropertyChanged("MaDeVaKhoiTrongKiThi");
					this.OnMaDeVaKhoiTrongKiThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Float")]
		public System.Nullable<double> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeVaKhoiTrongKyThi_HocSinhTrongKiThi", Storage="_DeVaKhoiTrongKyThi", ThisKey="MaDeVaKhoiTrongKiThi", OtherKey="MaDeVaKhoiTrongKyThi", IsForeignKey=true)]
		public DeVaKhoiTrongKyThi DeVaKhoiTrongKyThi
		{
			get
			{
				return this._DeVaKhoiTrongKyThi.Entity;
			}
			set
			{
				DeVaKhoiTrongKyThi previousValue = this._DeVaKhoiTrongKyThi.Entity;
				if (((previousValue != value) 
							|| (this._DeVaKhoiTrongKyThi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeVaKhoiTrongKyThi.Entity = null;
						previousValue.HocSinhTrongKiThis.Remove(this);
					}
					this._DeVaKhoiTrongKyThi.Entity = value;
					if ((value != null))
					{
						value.HocSinhTrongKiThis.Add(this);
						this._MaDeVaKhoiTrongKiThi = value.MaDeVaKhoiTrongKyThi;
					}
					else
					{
						this._MaDeVaKhoiTrongKiThi = default(string);
					}
					this.SendPropertyChanged("DeVaKhoiTrongKyThi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_HocSinhTrongKiThi", Storage="_HocSinh", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.HocSinhTrongKiThis.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.HocSinhTrongKiThis.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoi")]
	public partial class Khoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhoi;
		
		private string _TenKhoi;
		
		private EntitySet<CauHoi> _CauHois;
		
		private EntitySet<De> _Des;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
		private EntitySet<Lop> _Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoiChanging(int value);
    partial void OnMaKhoiChanged();
    partial void OnTenKhoiChanging(string value);
    partial void OnTenKhoiChanged();
    #endregion
		
		public Khoi()
		{
			this._CauHois = new EntitySet<CauHoi>(new Action<CauHoi>(this.attach_CauHois), new Action<CauHoi>(this.detach_CauHois));
			this._Des = new EntitySet<De>(new Action<De>(this.attach_Des), new Action<De>(this.detach_Des));
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoi", DbType="NVarChar(50)")]
		public string TenKhoi
		{
			get
			{
				return this._TenKhoi;
			}
			set
			{
				if ((this._TenKhoi != value))
				{
					this.OnTenKhoiChanging(value);
					this.SendPropertyChanging();
					this._TenKhoi = value;
					this.SendPropertyChanged("TenKhoi");
					this.OnTenKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_CauHoi", Storage="_CauHois", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<CauHoi> CauHois
		{
			get
			{
				return this._CauHois;
			}
			set
			{
				this._CauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_De", Storage="_Des", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<De> Des
		{
			get
			{
				return this._Des;
			}
			set
			{
				this._Des.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_GiaoVien", Storage="_GiaoViens", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_Lop", Storage="_Lops", ThisKey="MaKhoi", OtherKey="MaKhoi")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = this;
		}
		
		private void detach_CauHois(CauHoi entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = null;
		}
		
		private void attach_Des(De entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = this;
		}
		
		private void detach_Des(De entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = null;
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = null;
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KyThi")]
	public partial class KyThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKyThi;
		
		private string _TenKyThi;
		
		private System.Nullable<System.DateTime> _NgayThi;
		
		private EntitySet<DeVaKhoiTrongKyThi> _DeVaKhoiTrongKyThis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKyThiChanging(string value);
    partial void OnMaKyThiChanged();
    partial void OnTenKyThiChanging(string value);
    partial void OnTenKyThiChanged();
    partial void OnNgayThiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThiChanged();
    #endregion
		
		public KyThi()
		{
			this._DeVaKhoiTrongKyThis = new EntitySet<DeVaKhoiTrongKyThi>(new Action<DeVaKhoiTrongKyThi>(this.attach_DeVaKhoiTrongKyThis), new Action<DeVaKhoiTrongKyThi>(this.detach_DeVaKhoiTrongKyThis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKyThi", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKyThi
		{
			get
			{
				return this._MaKyThi;
			}
			set
			{
				if ((this._MaKyThi != value))
				{
					this.OnMaKyThiChanging(value);
					this.SendPropertyChanging();
					this._MaKyThi = value;
					this.SendPropertyChanged("MaKyThi");
					this.OnMaKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKyThi", DbType="NVarChar(150)")]
		public string TenKyThi
		{
			get
			{
				return this._TenKyThi;
			}
			set
			{
				if ((this._TenKyThi != value))
				{
					this.OnTenKyThiChanging(value);
					this.SendPropertyChanging();
					this._TenKyThi = value;
					this.SendPropertyChanged("TenKyThi");
					this.OnTenKyThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KyThi_DeVaKhoiTrongKyThi", Storage="_DeVaKhoiTrongKyThis", ThisKey="MaKyThi", OtherKey="MaKyThi")]
		public EntitySet<DeVaKhoiTrongKyThi> DeVaKhoiTrongKyThis
		{
			get
			{
				return this._DeVaKhoiTrongKyThis;
			}
			set
			{
				this._DeVaKhoiTrongKyThis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeVaKhoiTrongKyThis(DeVaKhoiTrongKyThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = this;
		}
		
		private void detach_DeVaKhoiTrongKyThis(DeVaKhoiTrongKyThi entity)
		{
			this.SendPropertyChanging();
			entity.KyThi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLop;
		
		private string _TenLop;
		
		private System.Nullable<int> _MaKhoi;
		
		private EntitySet<HocSinh> _HocSinhs;
		
		private EntityRef<Khoi> _Khoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnMaKhoiChanging(System.Nullable<int> value);
    partial void OnMaKhoiChanged();
    #endregion
		
		public Lop()
		{
			this._HocSinhs = new EntitySet<HocSinh>(new Action<HocSinh>(this.attach_HocSinhs), new Action<HocSinh>(this.detach_HocSinhs));
			this._Khoi = default(EntityRef<Khoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50)")]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int")]
		public System.Nullable<int> MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._Khoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_HocSinh", Storage="_HocSinhs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<HocSinh> HocSinhs
		{
			get
			{
				return this._HocSinhs;
			}
			set
			{
				this._HocSinhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoi_Lop", Storage="_Khoi", ThisKey="MaKhoi", OtherKey="MaKhoi", IsForeignKey=true)]
		public Khoi Khoi
		{
			get
			{
				return this._Khoi.Entity;
			}
			set
			{
				Khoi previousValue = this._Khoi.Entity;
				if (((previousValue != value) 
							|| (this._Khoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoi.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._Khoi.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaKhoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("Khoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_HocSinhs(HocSinh entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeOnTap")]
	public partial class DeOnTap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDeOnTap;
		
		private string _MaHocSinh;
		
		private string _MaDe;
		
		private int _MaKhoi;
		
		private System.Nullable<System.DateTime> _NgayGioiHan;
		
		private System.Nullable<double> _Diem;
		
		private EntityRef<De> _De;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeOnTapChanging(int value);
    partial void OnMaDeOnTapChanged();
    partial void OnMaHocSinhChanging(string value);
    partial void OnMaHocSinhChanged();
    partial void OnMaDeChanging(string value);
    partial void OnMaDeChanged();
    partial void OnMaKhoiChanging(int value);
    partial void OnMaKhoiChanged();
    partial void OnNgayGioiHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGioiHanChanged();
    partial void OnDiemChanging(System.Nullable<double> value);
    partial void OnDiemChanged();
    #endregion
		
		public DeOnTap()
		{
			this._De = default(EntityRef<De>);
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeOnTap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDeOnTap
		{
			get
			{
				return this._MaDeOnTap;
			}
			set
			{
				if ((this._MaDeOnTap != value))
				{
					this.OnMaDeOnTapChanging(value);
					this.SendPropertyChanging();
					this._MaDeOnTap = value;
					this.SendPropertyChanged("MaDeOnTap");
					this.OnMaDeOnTapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocSinh", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaHocSinh
		{
			get
			{
				return this._MaHocSinh;
			}
			set
			{
				if ((this._MaHocSinh != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocSinhChanging(value);
					this.SendPropertyChanging();
					this._MaHocSinh = value;
					this.SendPropertyChanged("MaHocSinh");
					this.OnMaHocSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDe", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaDe
		{
			get
			{
				return this._MaDe;
			}
			set
			{
				if ((this._MaDe != value))
				{
					if (this._De.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeChanging(value);
					this.SendPropertyChanging();
					this._MaDe = value;
					this.SendPropertyChanged("MaDe");
					this.OnMaDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoi", DbType="Int NOT NULL")]
		public int MaKhoi
		{
			get
			{
				return this._MaKhoi;
			}
			set
			{
				if ((this._MaKhoi != value))
				{
					if (this._De.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoiChanging(value);
					this.SendPropertyChanging();
					this._MaKhoi = value;
					this.SendPropertyChanged("MaKhoi");
					this.OnMaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGioiHan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayGioiHan
		{
			get
			{
				return this._NgayGioiHan;
			}
			set
			{
				if ((this._NgayGioiHan != value))
				{
					this.OnNgayGioiHanChanging(value);
					this.SendPropertyChanging();
					this._NgayGioiHan = value;
					this.SendPropertyChanged("NgayGioiHan");
					this.OnNgayGioiHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Float")]
		public System.Nullable<double> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="De_DeOnTap", Storage="_De", ThisKey="MaDe,MaKhoi", OtherKey="MaDe,MaKhoi", IsForeignKey=true)]
		public De De
		{
			get
			{
				return this._De.Entity;
			}
			set
			{
				De previousValue = this._De.Entity;
				if (((previousValue != value) 
							|| (this._De.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._De.Entity = null;
						previousValue.DeOnTaps.Remove(this);
					}
					this._De.Entity = value;
					if ((value != null))
					{
						value.DeOnTaps.Add(this);
						this._MaDe = value.MaDe;
						this._MaKhoi = value.MaKhoi;
					}
					else
					{
						this._MaDe = default(string);
						this._MaKhoi = default(int);
					}
					this.SendPropertyChanged("De");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_DeOnTap", Storage="_HocSinh", ThisKey="MaHocSinh", OtherKey="MaHocSinh", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.DeOnTaps.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.DeOnTaps.Add(this);
						this._MaHocSinh = value.MaHocSinh;
					}
					else
					{
						this._MaHocSinh = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
